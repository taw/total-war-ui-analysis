#!/usr/bin/env ruby

require_relative "../lib/task_set"

task_set = TaskSet.new(*ARGV)
task_set.todo.select!(&:supported_by_converter?)

converter_path = "#{__dir__}/convert_ui.py"

# In 4 threads
cores = 4
cores.times.map{|i|
  Thread.new{
    while true
      todo = task_set.todo.shift or break

      todo.converted_path.parent.mkpath
      puts "#{i} #{todo.data_path}"
      ok = system %Q[#{converter_path} -u "#{todo.data_path}" "#{todo.converted_path}"]

      if ok
        todo.converted_fail_path.unlink if todo.converted_fail_path.exist?
      else
        todo.converted_path.unlink
        todo.converted_fail_path.write("")
      end
    end
  }
}.map(&:join)
