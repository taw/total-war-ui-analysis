#!/usr/bin/env ruby

require "pathname"

data_dir = Pathname("#{__dir__}") + "../data"
output_dir = Pathname("#{__dir__}") + "../converted"

converter_path = "#{__dir__}/convert_ui.py"

if ARGV.empty?
  todo = data_dir.find.reject(&:directory?)
else
  todo = ARGV.map{|path| Pathname(path).realpath}
end

todo = todo.select{|path|
  version = path.read(10)[7,3].to_i
  [32, 33, 39, 43, 44, 46, 47, 49, 50, 51, 52, 54].include?(version)
}

# In 4 threads
cores = 4
cores.times.map{|i|
  Thread.new{
    while true
      path = todo.shift or break
      version = path.read(10)[7,3].to_i

      output_path = output_dir + (path.relative_path_from(data_dir).to_s + ".xml")
      fail_path = output_dir + (path.relative_path_from(data_dir).to_s + ".fail")

      output_path.parent.mkpath
      puts "#{i} #{path}"
      err = system %Q[#{converter_path} -u "#{path}" "#{output_path}"]

      if err
        # OK
      else
        output_path.unlink
        fail_path.write("")
      end
    end
  }
}.map(&:join)
