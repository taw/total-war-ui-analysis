#!/usr/bin/env ruby

require "pathname"

data_dir = Pathname("#{__dir__}") + "../data"
output_dir = Pathname("#{__dir__}") + "../unpacked"

converter_path = "#{__dir__}/ui2xml"

if ARGV.empty?
  todo = data_dir.find.reject(&:directory?)
else
  todo = ARGV.map{|path| Pathname(path).realpath}
end

todo = todo.select{|path|
  if path.to_s =~ /(\.fc|\.cml)\z/
    true
  else
    version = path.read(10)[7,3].to_i
    (31..33).include?(version)
  end
}

# In 4 threads
cores = 4
cores.times.map{|i|
  Thread.new{
    while true
      path = todo.shift or break
      version = path.read(10)[7,3]
      game_name = path.dirname.basename.to_s
      file_name = path.basename.to_s

      output_path = output_dir + version + "#{game_name}-#{file_name}.xml"
      fail_path = output_dir + version + "#{game_name}-#{file_name}.fail"

      output_path.parent.mkpath
      puts "#{i} #{path}"
      err = system %Q[#{converter_path} "#{path}" "#{output_path}"]

      if err
        # OK
        fail_path.unlink if fail_path.exist?
      else
        # output_path.unlink
        # fail_path.write("")
        output_path.rename fail_path
      end
    end
  }
}.map(&:join)
